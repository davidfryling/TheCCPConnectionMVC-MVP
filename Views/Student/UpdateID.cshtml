@model TheCCPConnection.Models.Student

@{
    ViewBag.Title = "Update Student SSID";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EmailAddress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.StudentSchools)
            </dt>

            <dd>
                <ul>
                    @foreach (var item in Model.StudentSchools)
                    {
                        <li>@Html.DisplayFor(modelItem => item.School.Type):&nbsp;@Html.DisplayFor(modelItem => item.School.Name)</li>
                    }
                </ul>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.GradYear)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.GradYear)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MaxCredits)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MaxCredits)
            </dd>

        </dl>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.SSID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SSID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SSID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <h3 class="text-left"><a href="@Url.Action("Index", "Counselor")" class="btn btn-default btn-sm">&#12298;&nbsp;Back to Dashboard</a></h3>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

